sudo: required
language: python
python:
  - 3.7
cache: pip
services:
  - docker
env:
  global:
    - DOCKER_COMPOSE_VERSION=1.26.2
    - IMAGE_NAME=jackgreenberg/tools
    - BASE_IMAGE=jackgreenberg/poetry:latest
    - secure: hCBw+brUJGBrwQWN9Ac77T1TAmadeygVjIKTpBPuB9i/WgxDCPEFipGz7CVarEUrX0bQWhoH4w0nNAmpbpayw/lcgE6fUFAKUcz+AIOKxDKyilZ8xa2FFxjp3bPYl4fpW03R0Q5q2MoyhIAI4lDt2azuVqkWdnO4wDll4ltazr2qQ0fVE4GZn2RlJwphuwC9bpSkpDH4/AWbNivBBXbW0O4AEoBGRh9oAohoeVAVhVIJ90hyccIcfhlRUjreZKG1SxWUUDvlIwRrcrOEJEt/ntyoprpqwkw0h3MuqthgXnrCyv8Q8v2WZoXlEeEqm1dsNCb73gcxZj461XUYngub5zWNUPBvWedBB838ei7RTx8fl7gj0OtDXZDkqJflMg3sEIIdyQvskFkd5zcrNZWIdcDrD4cvL/AQQ0tlbbX8/cmJQla6VpmYzjv1IfllQTFF1m5KYxeQ3UJ3hs1Yw8qqCzUBGT+JcfhFIyQyozuisQA4aAOhbZNBDOwCtPKOrNoznQIwlrk/BWU9beoQ8eFcqaio6jJB6snQbrfpEjaCnqGzTkLuYGRkL/lFhGy6/20JVG9anbcPxrgXKEHcQKrMxVmceku/f8OyD+olIV5Zcj0wLOxAFB1uO8dvfqowkvAiZA+O3SgICUwhrHU70DNkN1SV4Gi66cD7GBp+dOAwzK8=

before_install:
  - curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
jobs:
  include:
    - stage: build
      script:
        - docker pull ${BASE_IMAGE} || true
        - docker build -t ${IMAGE_NAME} .
        - docker images
    - script:
        - docker-compose up -d
        - docker-compose ps
    - stage: test
      script:
        - docker exec -ti tools-backend nox
        - docker-compose down
    - stage: deploy
      script:
        - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
        - docker tag back ${IMAGE_NAME}:$TRAVIS_BUILD_NUMBER
        - docker push ${IMAGE_NAME}:$TRAVIS_BUILD_NUMBER
        - docker tag back ${IMAGE_NAME}:latest
        - docker push ${IMAGE_NAME}:latest
# install:
  # - pip3 install poetry safety black flake8
  # # - poetry export -f requirements.txt | pip3 install -r /dev/stdin
  # - poetry install
# script:
  # - pytest -ra tests/
  # - flake8 .
  # - black .
  # - poetry export -f requirements.txt | safety check --file=/dev/stdin --full-report
# after_success:
