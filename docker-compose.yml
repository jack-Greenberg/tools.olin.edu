version: "3.8"
services:
  tools-backend:
    build:
      context: .
    image: jackgreenberg/tools-backend:latest
    container_name: tools-backend
    restart: always
    depends_on:
      - tools-db
    environment:
      FLASK_SKIP_DOTENV: 1
      AZURE_APPLICATION_ID: ${AZURE_APPLICATION_ID}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
    ports:
      - "8000:5000"
    volumes:
      - .:/tools
    networks:
      - tools-net

  tools-web:
    build:
      context: ./web
    image: jackgreenberg/tools-web:latest
    tty: true
    stdin_open: true
    container_name: tools-web
    volumes:
      - ./web/src:/web/src
    networks:
      - tools-net
    ports:
      - "3000:3000"

  tools-db:
    container_name: tools-db
    image: postgres:12.3
    restart: always
    environment:
      POSTGRES_DB: tools
      POSTGRES_USER: tools
      POSTGRES_PASSWORD: development
    volumes:
      - tools-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - tools-net

  tools-proxy:
    container_name: tools-proxy
    build:
      context: ./deployment
      dockerfile: Dockerfile.nginx
    image: jackgreenberg/tools-proxy:latest
    ports:
      - 8080:80
      - 8443:443
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - tools-net
    depends_on:
      - tools-backend
      - tools-web

  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: tools-letsencrypt
  #   volumes_from:
  #     - nginx-proxy
  #   depends_on:
  #     - tools-proxy
  #   volumes:
  #     - tools-certs:/etc/nginx/certs:rw
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   network_mode: bridge

networks:
  tools-net:
    name: tools-net

volumes:
  tools-data:
    name: tools-data
  # tools-certs:
